// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.proto

#ifndef PROTOBUF_server_2eproto__INCLUDED
#define PROTOBUF_server_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_server_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsRequestImpl();
void InitDefaultsRequest();
void InitDefaultsItemImpl();
void InitDefaultsItem();
void InitDefaultsResponseImpl();
void InitDefaultsResponse();
inline void InitDefaults() {
  InitDefaultsRequest();
  InitDefaultsItem();
  InitDefaultsResponse();
}
}  // namespace protobuf_server_2eproto
namespace doc_server_proto {
class Item;
class ItemDefaultTypeInternal;
extern ItemDefaultTypeInternal _Item_default_instance_;
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
}  // namespace doc_server_proto
namespace doc_server_proto {

// ===================================================================

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:doc_server_proto.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Request* other);
  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request* New() const PROTOBUF_FINAL { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string query = 3;
  bool has_query() const;
  void clear_query();
  static const int kQueryFieldNumber = 3;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // required uint64 sid = 1;
  bool has_sid() const;
  void clear_sid();
  static const int kSidFieldNumber = 1;
  ::google::protobuf::uint64 sid() const;
  void set_sid(::google::protobuf::uint64 value);

  // required int64 timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:doc_server_proto.Request)
 private:
  void set_has_sid();
  void clear_has_sid();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_query();
  void clear_has_query();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::uint64 sid_;
  ::google::protobuf::int64 timestamp_;
  friend struct ::protobuf_server_2eproto::TableStruct;
  friend void ::protobuf_server_2eproto::InitDefaultsRequestImpl();
};
// -------------------------------------------------------------------

class Item : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:doc_server_proto.Item) */ {
 public:
  Item();
  virtual ~Item();

  Item(const Item& from);

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Item(Item&& from) noexcept
    : Item() {
    *this = ::std::move(from);
  }

  inline Item& operator=(Item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Item& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Item* internal_default_instance() {
    return reinterpret_cast<const Item*>(
               &_Item_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Item* other);
  friend void swap(Item& a, Item& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Item* New() const PROTOBUF_FINAL { return New(NULL); }

  Item* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string title = 1;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // required string desc = 2;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 2;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // required string show_url = 3;
  bool has_show_url() const;
  void clear_show_url();
  static const int kShowUrlFieldNumber = 3;
  const ::std::string& show_url() const;
  void set_show_url(const ::std::string& value);
  #if LANG_CXX11
  void set_show_url(::std::string&& value);
  #endif
  void set_show_url(const char* value);
  void set_show_url(const char* value, size_t size);
  ::std::string* mutable_show_url();
  ::std::string* release_show_url();
  void set_allocated_show_url(::std::string* show_url);

  // required string jump_url = 4;
  bool has_jump_url() const;
  void clear_jump_url();
  static const int kJumpUrlFieldNumber = 4;
  const ::std::string& jump_url() const;
  void set_jump_url(const ::std::string& value);
  #if LANG_CXX11
  void set_jump_url(::std::string&& value);
  #endif
  void set_jump_url(const char* value);
  void set_jump_url(const char* value, size_t size);
  ::std::string* mutable_jump_url();
  ::std::string* release_jump_url();
  void set_allocated_jump_url(::std::string* jump_url);

  // @@protoc_insertion_point(class_scope:doc_server_proto.Item)
 private:
  void set_has_title();
  void clear_has_title();
  void set_has_desc();
  void clear_has_desc();
  void set_has_show_url();
  void clear_has_show_url();
  void set_has_jump_url();
  void clear_has_jump_url();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::internal::ArenaStringPtr show_url_;
  ::google::protobuf::internal::ArenaStringPtr jump_url_;
  friend struct ::protobuf_server_2eproto::TableStruct;
  friend void ::protobuf_server_2eproto::InitDefaultsItemImpl();
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:doc_server_proto.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const PROTOBUF_FINAL { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .doc_server_proto.Item item = 3;
  int item_size() const;
  void clear_item();
  static const int kItemFieldNumber = 3;
  const ::doc_server_proto::Item& item(int index) const;
  ::doc_server_proto::Item* mutable_item(int index);
  ::doc_server_proto::Item* add_item();
  ::google::protobuf::RepeatedPtrField< ::doc_server_proto::Item >*
      mutable_item();
  const ::google::protobuf::RepeatedPtrField< ::doc_server_proto::Item >&
      item() const;

  // required uint64 sid = 1;
  bool has_sid() const;
  void clear_sid();
  static const int kSidFieldNumber = 1;
  ::google::protobuf::uint64 sid() const;
  void set_sid(::google::protobuf::uint64 value);

  // required int64 timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // optional int32 err_code = 4;
  bool has_err_code() const;
  void clear_err_code();
  static const int kErrCodeFieldNumber = 4;
  ::google::protobuf::int32 err_code() const;
  void set_err_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:doc_server_proto.Response)
 private:
  void set_has_sid();
  void clear_has_sid();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_err_code();
  void clear_has_err_code();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::doc_server_proto::Item > item_;
  ::google::protobuf::uint64 sid_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::int32 err_code_;
  friend struct ::protobuf_server_2eproto::TableStruct;
  friend void ::protobuf_server_2eproto::InitDefaultsResponseImpl();
};
// ===================================================================

class DocServerAPI_Stub;

class DocServerAPI : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline DocServerAPI() {};
 public:
  virtual ~DocServerAPI();

  typedef DocServerAPI_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Search(::google::protobuf::RpcController* controller,
                       const ::doc_server_proto::Request* request,
                       ::doc_server_proto::Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(DocServerAPI);
};

class DocServerAPI_Stub : public DocServerAPI {
 public:
  DocServerAPI_Stub(::google::protobuf::RpcChannel* channel);
  DocServerAPI_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~DocServerAPI_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements DocServerAPI ------------------------------------------

  void Search(::google::protobuf::RpcController* controller,
                       const ::doc_server_proto::Request* request,
                       ::doc_server_proto::Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(DocServerAPI_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Request

// required uint64 sid = 1;
inline bool Request::has_sid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request::set_has_sid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request::clear_has_sid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request::clear_sid() {
  sid_ = GOOGLE_ULONGLONG(0);
  clear_has_sid();
}
inline ::google::protobuf::uint64 Request::sid() const {
  // @@protoc_insertion_point(field_get:doc_server_proto.Request.sid)
  return sid_;
}
inline void Request::set_sid(::google::protobuf::uint64 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:doc_server_proto.Request.sid)
}

// required int64 timestamp = 2;
inline bool Request::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 Request::timestamp() const {
  // @@protoc_insertion_point(field_get:doc_server_proto.Request.timestamp)
  return timestamp_;
}
inline void Request::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:doc_server_proto.Request.timestamp)
}

// required string query = 3;
inline bool Request::has_query() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_query() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_query() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_query();
}
inline const ::std::string& Request::query() const {
  // @@protoc_insertion_point(field_get:doc_server_proto.Request.query)
  return query_.GetNoArena();
}
inline void Request::set_query(const ::std::string& value) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:doc_server_proto.Request.query)
}
#if LANG_CXX11
inline void Request::set_query(::std::string&& value) {
  set_has_query();
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:doc_server_proto.Request.query)
}
#endif
inline void Request::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:doc_server_proto.Request.query)
}
inline void Request::set_query(const char* value, size_t size) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:doc_server_proto.Request.query)
}
inline ::std::string* Request::mutable_query() {
  set_has_query();
  // @@protoc_insertion_point(field_mutable:doc_server_proto.Request.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_query() {
  // @@protoc_insertion_point(field_release:doc_server_proto.Request.query)
  clear_has_query();
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    set_has_query();
  } else {
    clear_has_query();
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:doc_server_proto.Request.query)
}

// -------------------------------------------------------------------

// Item

// required string title = 1;
inline bool Item::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Item::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Item::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Item::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& Item::title() const {
  // @@protoc_insertion_point(field_get:doc_server_proto.Item.title)
  return title_.GetNoArena();
}
inline void Item::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:doc_server_proto.Item.title)
}
#if LANG_CXX11
inline void Item::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:doc_server_proto.Item.title)
}
#endif
inline void Item::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:doc_server_proto.Item.title)
}
inline void Item::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:doc_server_proto.Item.title)
}
inline ::std::string* Item::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:doc_server_proto.Item.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Item::release_title() {
  // @@protoc_insertion_point(field_release:doc_server_proto.Item.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Item::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:doc_server_proto.Item.title)
}

// required string desc = 2;
inline bool Item::has_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Item::set_has_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Item::clear_has_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Item::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
inline const ::std::string& Item::desc() const {
  // @@protoc_insertion_point(field_get:doc_server_proto.Item.desc)
  return desc_.GetNoArena();
}
inline void Item::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:doc_server_proto.Item.desc)
}
#if LANG_CXX11
inline void Item::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:doc_server_proto.Item.desc)
}
#endif
inline void Item::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:doc_server_proto.Item.desc)
}
inline void Item::set_desc(const char* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:doc_server_proto.Item.desc)
}
inline ::std::string* Item::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:doc_server_proto.Item.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Item::release_desc() {
  // @@protoc_insertion_point(field_release:doc_server_proto.Item.desc)
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Item::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:doc_server_proto.Item.desc)
}

// required string show_url = 3;
inline bool Item::has_show_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Item::set_has_show_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Item::clear_has_show_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Item::clear_show_url() {
  show_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_show_url();
}
inline const ::std::string& Item::show_url() const {
  // @@protoc_insertion_point(field_get:doc_server_proto.Item.show_url)
  return show_url_.GetNoArena();
}
inline void Item::set_show_url(const ::std::string& value) {
  set_has_show_url();
  show_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:doc_server_proto.Item.show_url)
}
#if LANG_CXX11
inline void Item::set_show_url(::std::string&& value) {
  set_has_show_url();
  show_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:doc_server_proto.Item.show_url)
}
#endif
inline void Item::set_show_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_show_url();
  show_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:doc_server_proto.Item.show_url)
}
inline void Item::set_show_url(const char* value, size_t size) {
  set_has_show_url();
  show_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:doc_server_proto.Item.show_url)
}
inline ::std::string* Item::mutable_show_url() {
  set_has_show_url();
  // @@protoc_insertion_point(field_mutable:doc_server_proto.Item.show_url)
  return show_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Item::release_show_url() {
  // @@protoc_insertion_point(field_release:doc_server_proto.Item.show_url)
  clear_has_show_url();
  return show_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Item::set_allocated_show_url(::std::string* show_url) {
  if (show_url != NULL) {
    set_has_show_url();
  } else {
    clear_has_show_url();
  }
  show_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), show_url);
  // @@protoc_insertion_point(field_set_allocated:doc_server_proto.Item.show_url)
}

// required string jump_url = 4;
inline bool Item::has_jump_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Item::set_has_jump_url() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Item::clear_has_jump_url() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Item::clear_jump_url() {
  jump_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_jump_url();
}
inline const ::std::string& Item::jump_url() const {
  // @@protoc_insertion_point(field_get:doc_server_proto.Item.jump_url)
  return jump_url_.GetNoArena();
}
inline void Item::set_jump_url(const ::std::string& value) {
  set_has_jump_url();
  jump_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:doc_server_proto.Item.jump_url)
}
#if LANG_CXX11
inline void Item::set_jump_url(::std::string&& value) {
  set_has_jump_url();
  jump_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:doc_server_proto.Item.jump_url)
}
#endif
inline void Item::set_jump_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_jump_url();
  jump_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:doc_server_proto.Item.jump_url)
}
inline void Item::set_jump_url(const char* value, size_t size) {
  set_has_jump_url();
  jump_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:doc_server_proto.Item.jump_url)
}
inline ::std::string* Item::mutable_jump_url() {
  set_has_jump_url();
  // @@protoc_insertion_point(field_mutable:doc_server_proto.Item.jump_url)
  return jump_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Item::release_jump_url() {
  // @@protoc_insertion_point(field_release:doc_server_proto.Item.jump_url)
  clear_has_jump_url();
  return jump_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Item::set_allocated_jump_url(::std::string* jump_url) {
  if (jump_url != NULL) {
    set_has_jump_url();
  } else {
    clear_has_jump_url();
  }
  jump_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jump_url);
  // @@protoc_insertion_point(field_set_allocated:doc_server_proto.Item.jump_url)
}

// -------------------------------------------------------------------

// Response

// required uint64 sid = 1;
inline bool Response::has_sid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_sid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_sid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_sid() {
  sid_ = GOOGLE_ULONGLONG(0);
  clear_has_sid();
}
inline ::google::protobuf::uint64 Response::sid() const {
  // @@protoc_insertion_point(field_get:doc_server_proto.Response.sid)
  return sid_;
}
inline void Response::set_sid(::google::protobuf::uint64 value) {
  set_has_sid();
  sid_ = value;
  // @@protoc_insertion_point(field_set:doc_server_proto.Response.sid)
}

// required int64 timestamp = 2;
inline bool Response::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 Response::timestamp() const {
  // @@protoc_insertion_point(field_get:doc_server_proto.Response.timestamp)
  return timestamp_;
}
inline void Response::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:doc_server_proto.Response.timestamp)
}

// repeated .doc_server_proto.Item item = 3;
inline int Response::item_size() const {
  return item_.size();
}
inline void Response::clear_item() {
  item_.Clear();
}
inline const ::doc_server_proto::Item& Response::item(int index) const {
  // @@protoc_insertion_point(field_get:doc_server_proto.Response.item)
  return item_.Get(index);
}
inline ::doc_server_proto::Item* Response::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:doc_server_proto.Response.item)
  return item_.Mutable(index);
}
inline ::doc_server_proto::Item* Response::add_item() {
  // @@protoc_insertion_point(field_add:doc_server_proto.Response.item)
  return item_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::doc_server_proto::Item >*
Response::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:doc_server_proto.Response.item)
  return &item_;
}
inline const ::google::protobuf::RepeatedPtrField< ::doc_server_proto::Item >&
Response::item() const {
  // @@protoc_insertion_point(field_list:doc_server_proto.Response.item)
  return item_;
}

// optional int32 err_code = 4;
inline bool Response::has_err_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response::set_has_err_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response::clear_has_err_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response::clear_err_code() {
  err_code_ = 0;
  clear_has_err_code();
}
inline ::google::protobuf::int32 Response::err_code() const {
  // @@protoc_insertion_point(field_get:doc_server_proto.Response.err_code)
  return err_code_;
}
inline void Response::set_err_code(::google::protobuf::int32 value) {
  set_has_err_code();
  err_code_ = value;
  // @@protoc_insertion_point(field_set:doc_server_proto.Response.err_code)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace doc_server_proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_2eproto__INCLUDED
