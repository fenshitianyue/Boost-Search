// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: index.proto

#ifndef PROTOBUF_index_2eproto__INCLUDED
#define PROTOBUF_index_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_index_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPairImpl();
void InitDefaultsPair();
void InitDefaultsDocInfoImpl();
void InitDefaultsDocInfo();
void InitDefaultsWeightImpl();
void InitDefaultsWeight();
void InitDefaultsKwdInfoImpl();
void InitDefaultsKwdInfo();
void InitDefaultsIndexImpl();
void InitDefaultsIndex();
inline void InitDefaults() {
  InitDefaultsPair();
  InitDefaultsDocInfo();
  InitDefaultsWeight();
  InitDefaultsKwdInfo();
  InitDefaultsIndex();
}
}  // namespace protobuf_index_2eproto
namespace doc_index_proto {
class DocInfo;
class DocInfoDefaultTypeInternal;
extern DocInfoDefaultTypeInternal _DocInfo_default_instance_;
class Index;
class IndexDefaultTypeInternal;
extern IndexDefaultTypeInternal _Index_default_instance_;
class KwdInfo;
class KwdInfoDefaultTypeInternal;
extern KwdInfoDefaultTypeInternal _KwdInfo_default_instance_;
class Pair;
class PairDefaultTypeInternal;
extern PairDefaultTypeInternal _Pair_default_instance_;
class Weight;
class WeightDefaultTypeInternal;
extern WeightDefaultTypeInternal _Weight_default_instance_;
}  // namespace doc_index_proto
namespace doc_index_proto {

// ===================================================================

class Pair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:doc_index_proto.Pair) */ {
 public:
  Pair();
  virtual ~Pair();

  Pair(const Pair& from);

  inline Pair& operator=(const Pair& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Pair(Pair&& from) noexcept
    : Pair() {
    *this = ::std::move(from);
  }

  inline Pair& operator=(Pair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Pair& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Pair* internal_default_instance() {
    return reinterpret_cast<const Pair*>(
               &_Pair_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Pair* other);
  friend void swap(Pair& a, Pair& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Pair* New() const PROTOBUF_FINAL { return New(NULL); }

  Pair* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Pair& from);
  void MergeFrom(const Pair& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Pair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 beg = 1;
  bool has_beg() const;
  void clear_beg();
  static const int kBegFieldNumber = 1;
  ::google::protobuf::uint32 beg() const;
  void set_beg(::google::protobuf::uint32 value);

  // required uint32 end = 2;
  bool has_end() const;
  void clear_end();
  static const int kEndFieldNumber = 2;
  ::google::protobuf::uint32 end() const;
  void set_end(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:doc_index_proto.Pair)
 private:
  void set_has_beg();
  void clear_has_beg();
  void set_has_end();
  void clear_has_end();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 beg_;
  ::google::protobuf::uint32 end_;
  friend struct ::protobuf_index_2eproto::TableStruct;
  friend void ::protobuf_index_2eproto::InitDefaultsPairImpl();
};
// -------------------------------------------------------------------

class DocInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:doc_index_proto.DocInfo) */ {
 public:
  DocInfo();
  virtual ~DocInfo();

  DocInfo(const DocInfo& from);

  inline DocInfo& operator=(const DocInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DocInfo(DocInfo&& from) noexcept
    : DocInfo() {
    *this = ::std::move(from);
  }

  inline DocInfo& operator=(DocInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DocInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DocInfo* internal_default_instance() {
    return reinterpret_cast<const DocInfo*>(
               &_DocInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(DocInfo* other);
  friend void swap(DocInfo& a, DocInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DocInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DocInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DocInfo& from);
  void MergeFrom(const DocInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DocInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .doc_index_proto.Pair title_token = 6;
  int title_token_size() const;
  void clear_title_token();
  static const int kTitleTokenFieldNumber = 6;
  const ::doc_index_proto::Pair& title_token(int index) const;
  ::doc_index_proto::Pair* mutable_title_token(int index);
  ::doc_index_proto::Pair* add_title_token();
  ::google::protobuf::RepeatedPtrField< ::doc_index_proto::Pair >*
      mutable_title_token();
  const ::google::protobuf::RepeatedPtrField< ::doc_index_proto::Pair >&
      title_token() const;

  // repeated .doc_index_proto.Pair content_token = 7;
  int content_token_size() const;
  void clear_content_token();
  static const int kContentTokenFieldNumber = 7;
  const ::doc_index_proto::Pair& content_token(int index) const;
  ::doc_index_proto::Pair* mutable_content_token(int index);
  ::doc_index_proto::Pair* add_content_token();
  ::google::protobuf::RepeatedPtrField< ::doc_index_proto::Pair >*
      mutable_content_token();
  const ::google::protobuf::RepeatedPtrField< ::doc_index_proto::Pair >&
      content_token() const;

  // required string title = 2;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // required string content = 3;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 3;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // required string show_url = 4;
  bool has_show_url() const;
  void clear_show_url();
  static const int kShowUrlFieldNumber = 4;
  const ::std::string& show_url() const;
  void set_show_url(const ::std::string& value);
  #if LANG_CXX11
  void set_show_url(::std::string&& value);
  #endif
  void set_show_url(const char* value);
  void set_show_url(const char* value, size_t size);
  ::std::string* mutable_show_url();
  ::std::string* release_show_url();
  void set_allocated_show_url(::std::string* show_url);

  // required string jump_url = 5;
  bool has_jump_url() const;
  void clear_jump_url();
  static const int kJumpUrlFieldNumber = 5;
  const ::std::string& jump_url() const;
  void set_jump_url(const ::std::string& value);
  #if LANG_CXX11
  void set_jump_url(::std::string&& value);
  #endif
  void set_jump_url(const char* value);
  void set_jump_url(const char* value, size_t size);
  ::std::string* mutable_jump_url();
  ::std::string* release_jump_url();
  void set_allocated_jump_url(::std::string* jump_url);

  // required uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:doc_index_proto.DocInfo)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_title();
  void clear_has_title();
  void set_has_content();
  void clear_has_content();
  void set_has_show_url();
  void clear_has_show_url();
  void set_has_jump_url();
  void clear_has_jump_url();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::doc_index_proto::Pair > title_token_;
  ::google::protobuf::RepeatedPtrField< ::doc_index_proto::Pair > content_token_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr show_url_;
  ::google::protobuf::internal::ArenaStringPtr jump_url_;
  ::google::protobuf::uint64 id_;
  friend struct ::protobuf_index_2eproto::TableStruct;
  friend void ::protobuf_index_2eproto::InitDefaultsDocInfoImpl();
};
// -------------------------------------------------------------------

class Weight : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:doc_index_proto.Weight) */ {
 public:
  Weight();
  virtual ~Weight();

  Weight(const Weight& from);

  inline Weight& operator=(const Weight& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Weight(Weight&& from) noexcept
    : Weight() {
    *this = ::std::move(from);
  }

  inline Weight& operator=(Weight&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Weight& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Weight* internal_default_instance() {
    return reinterpret_cast<const Weight*>(
               &_Weight_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Weight* other);
  friend void swap(Weight& a, Weight& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Weight* New() const PROTOBUF_FINAL { return New(NULL); }

  Weight* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Weight& from);
  void MergeFrom(const Weight& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Weight* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 doc_id = 1;
  bool has_doc_id() const;
  void clear_doc_id();
  static const int kDocIdFieldNumber = 1;
  ::google::protobuf::uint64 doc_id() const;
  void set_doc_id(::google::protobuf::uint64 value);

  // required int32 weight = 2;
  bool has_weight() const;
  void clear_weight();
  static const int kWeightFieldNumber = 2;
  ::google::protobuf::int32 weight() const;
  void set_weight(::google::protobuf::int32 value);

  // required int32 first_pos = 3;
  bool has_first_pos() const;
  void clear_first_pos();
  static const int kFirstPosFieldNumber = 3;
  ::google::protobuf::int32 first_pos() const;
  void set_first_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:doc_index_proto.Weight)
 private:
  void set_has_doc_id();
  void clear_has_doc_id();
  void set_has_weight();
  void clear_has_weight();
  void set_has_first_pos();
  void clear_has_first_pos();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 doc_id_;
  ::google::protobuf::int32 weight_;
  ::google::protobuf::int32 first_pos_;
  friend struct ::protobuf_index_2eproto::TableStruct;
  friend void ::protobuf_index_2eproto::InitDefaultsWeightImpl();
};
// -------------------------------------------------------------------

class KwdInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:doc_index_proto.KwdInfo) */ {
 public:
  KwdInfo();
  virtual ~KwdInfo();

  KwdInfo(const KwdInfo& from);

  inline KwdInfo& operator=(const KwdInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KwdInfo(KwdInfo&& from) noexcept
    : KwdInfo() {
    *this = ::std::move(from);
  }

  inline KwdInfo& operator=(KwdInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KwdInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KwdInfo* internal_default_instance() {
    return reinterpret_cast<const KwdInfo*>(
               &_KwdInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(KwdInfo* other);
  friend void swap(KwdInfo& a, KwdInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KwdInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  KwdInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KwdInfo& from);
  void MergeFrom(const KwdInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KwdInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .doc_index_proto.Weight doc_list = 2;
  int doc_list_size() const;
  void clear_doc_list();
  static const int kDocListFieldNumber = 2;
  const ::doc_index_proto::Weight& doc_list(int index) const;
  ::doc_index_proto::Weight* mutable_doc_list(int index);
  ::doc_index_proto::Weight* add_doc_list();
  ::google::protobuf::RepeatedPtrField< ::doc_index_proto::Weight >*
      mutable_doc_list();
  const ::google::protobuf::RepeatedPtrField< ::doc_index_proto::Weight >&
      doc_list() const;

  // required string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:doc_index_proto.KwdInfo)
 private:
  void set_has_key();
  void clear_has_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::doc_index_proto::Weight > doc_list_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  friend struct ::protobuf_index_2eproto::TableStruct;
  friend void ::protobuf_index_2eproto::InitDefaultsKwdInfoImpl();
};
// -------------------------------------------------------------------

class Index : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:doc_index_proto.Index) */ {
 public:
  Index();
  virtual ~Index();

  Index(const Index& from);

  inline Index& operator=(const Index& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Index(Index&& from) noexcept
    : Index() {
    *this = ::std::move(from);
  }

  inline Index& operator=(Index&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Index& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Index* internal_default_instance() {
    return reinterpret_cast<const Index*>(
               &_Index_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Index* other);
  friend void swap(Index& a, Index& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Index* New() const PROTOBUF_FINAL { return New(NULL); }

  Index* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Index& from);
  void MergeFrom(const Index& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Index* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .doc_index_proto.DocInfo forward_index = 1;
  int forward_index_size() const;
  void clear_forward_index();
  static const int kForwardIndexFieldNumber = 1;
  const ::doc_index_proto::DocInfo& forward_index(int index) const;
  ::doc_index_proto::DocInfo* mutable_forward_index(int index);
  ::doc_index_proto::DocInfo* add_forward_index();
  ::google::protobuf::RepeatedPtrField< ::doc_index_proto::DocInfo >*
      mutable_forward_index();
  const ::google::protobuf::RepeatedPtrField< ::doc_index_proto::DocInfo >&
      forward_index() const;

  // repeated .doc_index_proto.KwdInfo inverted_index = 2;
  int inverted_index_size() const;
  void clear_inverted_index();
  static const int kInvertedIndexFieldNumber = 2;
  const ::doc_index_proto::KwdInfo& inverted_index(int index) const;
  ::doc_index_proto::KwdInfo* mutable_inverted_index(int index);
  ::doc_index_proto::KwdInfo* add_inverted_index();
  ::google::protobuf::RepeatedPtrField< ::doc_index_proto::KwdInfo >*
      mutable_inverted_index();
  const ::google::protobuf::RepeatedPtrField< ::doc_index_proto::KwdInfo >&
      inverted_index() const;

  // @@protoc_insertion_point(class_scope:doc_index_proto.Index)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::doc_index_proto::DocInfo > forward_index_;
  ::google::protobuf::RepeatedPtrField< ::doc_index_proto::KwdInfo > inverted_index_;
  friend struct ::protobuf_index_2eproto::TableStruct;
  friend void ::protobuf_index_2eproto::InitDefaultsIndexImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Pair

// required uint32 beg = 1;
inline bool Pair::has_beg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Pair::set_has_beg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Pair::clear_has_beg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Pair::clear_beg() {
  beg_ = 0u;
  clear_has_beg();
}
inline ::google::protobuf::uint32 Pair::beg() const {
  // @@protoc_insertion_point(field_get:doc_index_proto.Pair.beg)
  return beg_;
}
inline void Pair::set_beg(::google::protobuf::uint32 value) {
  set_has_beg();
  beg_ = value;
  // @@protoc_insertion_point(field_set:doc_index_proto.Pair.beg)
}

// required uint32 end = 2;
inline bool Pair::has_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Pair::set_has_end() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Pair::clear_has_end() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Pair::clear_end() {
  end_ = 0u;
  clear_has_end();
}
inline ::google::protobuf::uint32 Pair::end() const {
  // @@protoc_insertion_point(field_get:doc_index_proto.Pair.end)
  return end_;
}
inline void Pair::set_end(::google::protobuf::uint32 value) {
  set_has_end();
  end_ = value;
  // @@protoc_insertion_point(field_set:doc_index_proto.Pair.end)
}

// -------------------------------------------------------------------

// DocInfo

// required uint64 id = 1;
inline bool DocInfo::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DocInfo::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DocInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DocInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 DocInfo::id() const {
  // @@protoc_insertion_point(field_get:doc_index_proto.DocInfo.id)
  return id_;
}
inline void DocInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:doc_index_proto.DocInfo.id)
}

// required string title = 2;
inline bool DocInfo::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DocInfo::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DocInfo::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DocInfo::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& DocInfo::title() const {
  // @@protoc_insertion_point(field_get:doc_index_proto.DocInfo.title)
  return title_.GetNoArena();
}
inline void DocInfo::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:doc_index_proto.DocInfo.title)
}
#if LANG_CXX11
inline void DocInfo::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:doc_index_proto.DocInfo.title)
}
#endif
inline void DocInfo::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:doc_index_proto.DocInfo.title)
}
inline void DocInfo::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:doc_index_proto.DocInfo.title)
}
inline ::std::string* DocInfo::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:doc_index_proto.DocInfo.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DocInfo::release_title() {
  // @@protoc_insertion_point(field_release:doc_index_proto.DocInfo.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DocInfo::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:doc_index_proto.DocInfo.title)
}

// required string content = 3;
inline bool DocInfo::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DocInfo::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DocInfo::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DocInfo::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& DocInfo::content() const {
  // @@protoc_insertion_point(field_get:doc_index_proto.DocInfo.content)
  return content_.GetNoArena();
}
inline void DocInfo::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:doc_index_proto.DocInfo.content)
}
#if LANG_CXX11
inline void DocInfo::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:doc_index_proto.DocInfo.content)
}
#endif
inline void DocInfo::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:doc_index_proto.DocInfo.content)
}
inline void DocInfo::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:doc_index_proto.DocInfo.content)
}
inline ::std::string* DocInfo::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:doc_index_proto.DocInfo.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DocInfo::release_content() {
  // @@protoc_insertion_point(field_release:doc_index_proto.DocInfo.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DocInfo::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:doc_index_proto.DocInfo.content)
}

// required string show_url = 4;
inline bool DocInfo::has_show_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DocInfo::set_has_show_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DocInfo::clear_has_show_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DocInfo::clear_show_url() {
  show_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_show_url();
}
inline const ::std::string& DocInfo::show_url() const {
  // @@protoc_insertion_point(field_get:doc_index_proto.DocInfo.show_url)
  return show_url_.GetNoArena();
}
inline void DocInfo::set_show_url(const ::std::string& value) {
  set_has_show_url();
  show_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:doc_index_proto.DocInfo.show_url)
}
#if LANG_CXX11
inline void DocInfo::set_show_url(::std::string&& value) {
  set_has_show_url();
  show_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:doc_index_proto.DocInfo.show_url)
}
#endif
inline void DocInfo::set_show_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_show_url();
  show_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:doc_index_proto.DocInfo.show_url)
}
inline void DocInfo::set_show_url(const char* value, size_t size) {
  set_has_show_url();
  show_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:doc_index_proto.DocInfo.show_url)
}
inline ::std::string* DocInfo::mutable_show_url() {
  set_has_show_url();
  // @@protoc_insertion_point(field_mutable:doc_index_proto.DocInfo.show_url)
  return show_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DocInfo::release_show_url() {
  // @@protoc_insertion_point(field_release:doc_index_proto.DocInfo.show_url)
  clear_has_show_url();
  return show_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DocInfo::set_allocated_show_url(::std::string* show_url) {
  if (show_url != NULL) {
    set_has_show_url();
  } else {
    clear_has_show_url();
  }
  show_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), show_url);
  // @@protoc_insertion_point(field_set_allocated:doc_index_proto.DocInfo.show_url)
}

// required string jump_url = 5;
inline bool DocInfo::has_jump_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DocInfo::set_has_jump_url() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DocInfo::clear_has_jump_url() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DocInfo::clear_jump_url() {
  jump_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_jump_url();
}
inline const ::std::string& DocInfo::jump_url() const {
  // @@protoc_insertion_point(field_get:doc_index_proto.DocInfo.jump_url)
  return jump_url_.GetNoArena();
}
inline void DocInfo::set_jump_url(const ::std::string& value) {
  set_has_jump_url();
  jump_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:doc_index_proto.DocInfo.jump_url)
}
#if LANG_CXX11
inline void DocInfo::set_jump_url(::std::string&& value) {
  set_has_jump_url();
  jump_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:doc_index_proto.DocInfo.jump_url)
}
#endif
inline void DocInfo::set_jump_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_jump_url();
  jump_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:doc_index_proto.DocInfo.jump_url)
}
inline void DocInfo::set_jump_url(const char* value, size_t size) {
  set_has_jump_url();
  jump_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:doc_index_proto.DocInfo.jump_url)
}
inline ::std::string* DocInfo::mutable_jump_url() {
  set_has_jump_url();
  // @@protoc_insertion_point(field_mutable:doc_index_proto.DocInfo.jump_url)
  return jump_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DocInfo::release_jump_url() {
  // @@protoc_insertion_point(field_release:doc_index_proto.DocInfo.jump_url)
  clear_has_jump_url();
  return jump_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DocInfo::set_allocated_jump_url(::std::string* jump_url) {
  if (jump_url != NULL) {
    set_has_jump_url();
  } else {
    clear_has_jump_url();
  }
  jump_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jump_url);
  // @@protoc_insertion_point(field_set_allocated:doc_index_proto.DocInfo.jump_url)
}

// repeated .doc_index_proto.Pair title_token = 6;
inline int DocInfo::title_token_size() const {
  return title_token_.size();
}
inline void DocInfo::clear_title_token() {
  title_token_.Clear();
}
inline const ::doc_index_proto::Pair& DocInfo::title_token(int index) const {
  // @@protoc_insertion_point(field_get:doc_index_proto.DocInfo.title_token)
  return title_token_.Get(index);
}
inline ::doc_index_proto::Pair* DocInfo::mutable_title_token(int index) {
  // @@protoc_insertion_point(field_mutable:doc_index_proto.DocInfo.title_token)
  return title_token_.Mutable(index);
}
inline ::doc_index_proto::Pair* DocInfo::add_title_token() {
  // @@protoc_insertion_point(field_add:doc_index_proto.DocInfo.title_token)
  return title_token_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::doc_index_proto::Pair >*
DocInfo::mutable_title_token() {
  // @@protoc_insertion_point(field_mutable_list:doc_index_proto.DocInfo.title_token)
  return &title_token_;
}
inline const ::google::protobuf::RepeatedPtrField< ::doc_index_proto::Pair >&
DocInfo::title_token() const {
  // @@protoc_insertion_point(field_list:doc_index_proto.DocInfo.title_token)
  return title_token_;
}

// repeated .doc_index_proto.Pair content_token = 7;
inline int DocInfo::content_token_size() const {
  return content_token_.size();
}
inline void DocInfo::clear_content_token() {
  content_token_.Clear();
}
inline const ::doc_index_proto::Pair& DocInfo::content_token(int index) const {
  // @@protoc_insertion_point(field_get:doc_index_proto.DocInfo.content_token)
  return content_token_.Get(index);
}
inline ::doc_index_proto::Pair* DocInfo::mutable_content_token(int index) {
  // @@protoc_insertion_point(field_mutable:doc_index_proto.DocInfo.content_token)
  return content_token_.Mutable(index);
}
inline ::doc_index_proto::Pair* DocInfo::add_content_token() {
  // @@protoc_insertion_point(field_add:doc_index_proto.DocInfo.content_token)
  return content_token_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::doc_index_proto::Pair >*
DocInfo::mutable_content_token() {
  // @@protoc_insertion_point(field_mutable_list:doc_index_proto.DocInfo.content_token)
  return &content_token_;
}
inline const ::google::protobuf::RepeatedPtrField< ::doc_index_proto::Pair >&
DocInfo::content_token() const {
  // @@protoc_insertion_point(field_list:doc_index_proto.DocInfo.content_token)
  return content_token_;
}

// -------------------------------------------------------------------

// Weight

// required uint64 doc_id = 1;
inline bool Weight::has_doc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Weight::set_has_doc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Weight::clear_has_doc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Weight::clear_doc_id() {
  doc_id_ = GOOGLE_ULONGLONG(0);
  clear_has_doc_id();
}
inline ::google::protobuf::uint64 Weight::doc_id() const {
  // @@protoc_insertion_point(field_get:doc_index_proto.Weight.doc_id)
  return doc_id_;
}
inline void Weight::set_doc_id(::google::protobuf::uint64 value) {
  set_has_doc_id();
  doc_id_ = value;
  // @@protoc_insertion_point(field_set:doc_index_proto.Weight.doc_id)
}

// required int32 weight = 2;
inline bool Weight::has_weight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Weight::set_has_weight() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Weight::clear_has_weight() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Weight::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
inline ::google::protobuf::int32 Weight::weight() const {
  // @@protoc_insertion_point(field_get:doc_index_proto.Weight.weight)
  return weight_;
}
inline void Weight::set_weight(::google::protobuf::int32 value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:doc_index_proto.Weight.weight)
}

// required int32 first_pos = 3;
inline bool Weight::has_first_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Weight::set_has_first_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Weight::clear_has_first_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Weight::clear_first_pos() {
  first_pos_ = 0;
  clear_has_first_pos();
}
inline ::google::protobuf::int32 Weight::first_pos() const {
  // @@protoc_insertion_point(field_get:doc_index_proto.Weight.first_pos)
  return first_pos_;
}
inline void Weight::set_first_pos(::google::protobuf::int32 value) {
  set_has_first_pos();
  first_pos_ = value;
  // @@protoc_insertion_point(field_set:doc_index_proto.Weight.first_pos)
}

// -------------------------------------------------------------------

// KwdInfo

// required string key = 1;
inline bool KwdInfo::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KwdInfo::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KwdInfo::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KwdInfo::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& KwdInfo::key() const {
  // @@protoc_insertion_point(field_get:doc_index_proto.KwdInfo.key)
  return key_.GetNoArena();
}
inline void KwdInfo::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:doc_index_proto.KwdInfo.key)
}
#if LANG_CXX11
inline void KwdInfo::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:doc_index_proto.KwdInfo.key)
}
#endif
inline void KwdInfo::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:doc_index_proto.KwdInfo.key)
}
inline void KwdInfo::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:doc_index_proto.KwdInfo.key)
}
inline ::std::string* KwdInfo::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:doc_index_proto.KwdInfo.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KwdInfo::release_key() {
  // @@protoc_insertion_point(field_release:doc_index_proto.KwdInfo.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KwdInfo::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:doc_index_proto.KwdInfo.key)
}

// repeated .doc_index_proto.Weight doc_list = 2;
inline int KwdInfo::doc_list_size() const {
  return doc_list_.size();
}
inline void KwdInfo::clear_doc_list() {
  doc_list_.Clear();
}
inline const ::doc_index_proto::Weight& KwdInfo::doc_list(int index) const {
  // @@protoc_insertion_point(field_get:doc_index_proto.KwdInfo.doc_list)
  return doc_list_.Get(index);
}
inline ::doc_index_proto::Weight* KwdInfo::mutable_doc_list(int index) {
  // @@protoc_insertion_point(field_mutable:doc_index_proto.KwdInfo.doc_list)
  return doc_list_.Mutable(index);
}
inline ::doc_index_proto::Weight* KwdInfo::add_doc_list() {
  // @@protoc_insertion_point(field_add:doc_index_proto.KwdInfo.doc_list)
  return doc_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::doc_index_proto::Weight >*
KwdInfo::mutable_doc_list() {
  // @@protoc_insertion_point(field_mutable_list:doc_index_proto.KwdInfo.doc_list)
  return &doc_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::doc_index_proto::Weight >&
KwdInfo::doc_list() const {
  // @@protoc_insertion_point(field_list:doc_index_proto.KwdInfo.doc_list)
  return doc_list_;
}

// -------------------------------------------------------------------

// Index

// repeated .doc_index_proto.DocInfo forward_index = 1;
inline int Index::forward_index_size() const {
  return forward_index_.size();
}
inline void Index::clear_forward_index() {
  forward_index_.Clear();
}
inline const ::doc_index_proto::DocInfo& Index::forward_index(int index) const {
  // @@protoc_insertion_point(field_get:doc_index_proto.Index.forward_index)
  return forward_index_.Get(index);
}
inline ::doc_index_proto::DocInfo* Index::mutable_forward_index(int index) {
  // @@protoc_insertion_point(field_mutable:doc_index_proto.Index.forward_index)
  return forward_index_.Mutable(index);
}
inline ::doc_index_proto::DocInfo* Index::add_forward_index() {
  // @@protoc_insertion_point(field_add:doc_index_proto.Index.forward_index)
  return forward_index_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::doc_index_proto::DocInfo >*
Index::mutable_forward_index() {
  // @@protoc_insertion_point(field_mutable_list:doc_index_proto.Index.forward_index)
  return &forward_index_;
}
inline const ::google::protobuf::RepeatedPtrField< ::doc_index_proto::DocInfo >&
Index::forward_index() const {
  // @@protoc_insertion_point(field_list:doc_index_proto.Index.forward_index)
  return forward_index_;
}

// repeated .doc_index_proto.KwdInfo inverted_index = 2;
inline int Index::inverted_index_size() const {
  return inverted_index_.size();
}
inline void Index::clear_inverted_index() {
  inverted_index_.Clear();
}
inline const ::doc_index_proto::KwdInfo& Index::inverted_index(int index) const {
  // @@protoc_insertion_point(field_get:doc_index_proto.Index.inverted_index)
  return inverted_index_.Get(index);
}
inline ::doc_index_proto::KwdInfo* Index::mutable_inverted_index(int index) {
  // @@protoc_insertion_point(field_mutable:doc_index_proto.Index.inverted_index)
  return inverted_index_.Mutable(index);
}
inline ::doc_index_proto::KwdInfo* Index::add_inverted_index() {
  // @@protoc_insertion_point(field_add:doc_index_proto.Index.inverted_index)
  return inverted_index_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::doc_index_proto::KwdInfo >*
Index::mutable_inverted_index() {
  // @@protoc_insertion_point(field_mutable_list:doc_index_proto.Index.inverted_index)
  return &inverted_index_;
}
inline const ::google::protobuf::RepeatedPtrField< ::doc_index_proto::KwdInfo >&
Index::inverted_index() const {
  // @@protoc_insertion_point(field_list:doc_index_proto.Index.inverted_index)
  return inverted_index_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace doc_index_proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_index_2eproto__INCLUDED
